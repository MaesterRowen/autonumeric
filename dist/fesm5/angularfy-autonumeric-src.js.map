{"version":3,"file":"angularfy-autonumeric-src.js.map","sources":["ng://@angularfy/autonumeric/src/lib/autonumeric-defaults.service.ts","ng://@angularfy/autonumeric/src/lib/autonumeric.directive.ts","ng://@angularfy/autonumeric/src/lib/autonumeric.module.ts"],"sourcesContent":["import {Injectable} from \"@angular/core\";\r\nimport {AutonumericOptions} from \"./autonumeric.model\";\r\nimport AutoNumeric from 'autonumeric';\r\n@Injectable()\r\nexport class AutonumericDefaults implements AutonumericOptions {\r\n    allowDecimalPadding = AutoNumeric.options.allowDecimalPadding.always;\r\n    alwaysAllowDecimalCharacter = AutoNumeric.options.alwaysAllowDecimalCharacter.doNotAllow;\r\n    caretPositionOnFocus = AutoNumeric.options.caretPositionOnFocus.doNoForceCaretPosition;\r\n    createLocalList = AutoNumeric.options.createLocalList.createList;\r\n    currencySymbol = AutoNumeric.options.currencySymbol.none;\r\n    currencySymbolPlacement = AutoNumeric.options.currencySymbolPlacement.prefix;\r\n    decimalCharacter = AutoNumeric.options.decimalCharacter.dot;\r\n    decimalCharacterAlternative = AutoNumeric.options.decimalCharacterAlternative.none;\r\n    decimalPlaces = AutoNumeric.options.decimalPlaces.two;\r\n    decimalPlacesRawValue = AutoNumeric.options.decimalPlacesRawValue.useDefault;\r\n    decimalPlacesShownOnBlur = AutoNumeric.options.decimalPlacesShownOnBlur.useDefault;\r\n    decimalPlacesShownOnFocus = AutoNumeric.options.decimalPlacesShownOnFocus.useDefault;\r\n    defaultValueOverride = AutoNumeric.options.defaultValueOverride.doNotOverride;\r\n    digitalGroupSpacing = AutoNumeric.options.digitalGroupSpacing.three;\r\n    digitGroupSeparator = AutoNumeric.options.digitGroupSeparator.comma;\r\n    divisorWhenUnfocused = AutoNumeric.options.divisorWhenUnfocused.none;\r\n    emptyInputBehavior = AutoNumeric.options.emptyInputBehavior.focus;\r\n    eventBubbles = AutoNumeric.options.eventBubbles.bubbles;\r\n    eventIsCancelable = AutoNumeric.options.eventIsCancelable.isCancelable;\r\n    failOnUnknownOption = AutoNumeric.options.failOnUnknownOption.ignore;\r\n    formatOnPageLoad = AutoNumeric.options.formatOnPageLoad.format;\r\n    formulaMode = AutoNumeric.options.formulaMode.disabled;\r\n    historySize = AutoNumeric.options.historySize.medium;\r\n    isCancellable = AutoNumeric.options.isCancellable.cancellable;\r\n    leadingZero = AutoNumeric.options.leadingZero.deny;\r\n    maximumValue = AutoNumeric.options.maximumValue.tenTrillions;\r\n    minimumValue = AutoNumeric.options.minimumValue.tenTrillions;\r\n    modifyValueOnWheel = AutoNumeric.options.modifyValueOnWheel.modifyValue;\r\n    negativeBracketsTypeOnBlur = AutoNumeric.options.negativeBracketsTypeOnBlur.none;\r\n    negativePositiveSignPlacement = AutoNumeric.options.negativePositiveSignPlacement.none;\r\n    negativeSignCharacter = AutoNumeric.options.negativeSignCharacter.hyphen;\r\n    noEventListeners = AutoNumeric.options.noEventListeners.addEvents;\r\n    onInvalidPaste = AutoNumeric.options.onInvalidPaste.error;\r\n    outputFormat = AutoNumeric.options.outputFormat.none;\r\n    overrideMinMaxLimits = AutoNumeric.options.overrideMinMaxLimits.doNotOverride;\r\n    positiveSignCharacter = AutoNumeric.options.positiveSignCharacter.plus;\r\n    rawValueDivisor = AutoNumeric.options.rawValueDivisor.none;\r\n    readOnly = AutoNumeric.options.readOnly.readWrite;\r\n    roundingMethod = AutoNumeric.options.roundingMethod.halfUpSymmetric;\r\n    saveValueToSessionStorage = AutoNumeric.options.saveValueToSessionStorage.doNotSave;\r\n    selectNumberOnly = AutoNumeric.options.selectNumberOnly.selectNumbersOnly;\r\n    selectOnFocus = AutoNumeric.options.selectOnFocus.select;\r\n    serializeSpaces = AutoNumeric.options.serializeSpaces.plus;\r\n    showOnlyNumbersOnFocus = AutoNumeric.options.showOnlyNumbersOnFocus.showAll;\r\n    showPositiveSign = AutoNumeric.options.showPositiveSign.hide;\r\n    showWarnings = AutoNumeric.options.showWarnings.show;\r\n    styleRules = AutoNumeric.options.styleRules.none;\r\n    suffixText = AutoNumeric.options.suffixText.none;\r\n    symbolWhenUnfocused = AutoNumeric.options.symbolWhenUnfocused.none;\r\n    unformatOnHover = AutoNumeric.options.unformatOnHover.unformat;\r\n    unformatOnSubmit = AutoNumeric.options.unformatOnSubmit.keepCurrentValue;\r\n    valuesToStrings = AutoNumeric.options.valuesToStrings.none;\r\n    watchExternalChanges = AutoNumeric.options.watchExternalChanges.doNotWatch;\r\n    wheelOn = AutoNumeric.options.wheelOn.focus;\r\n    wheelStep = AutoNumeric.options.wheelStep.progressive;\r\n}\r\n","import {\r\n  AfterViewInit,\r\n  Directive,\r\n  ElementRef,\r\n  EventEmitter,\r\n  forwardRef,\r\n  Input,\r\n  OnChanges,\r\n  OnDestroy,\r\n  OnInit,\r\n  Output,\r\n  Renderer2,\r\n  SimpleChanges,\r\n} from '@angular/core';\r\nimport {ControlValueAccessor, NG_VALUE_ACCESSOR} from '@angular/forms';\r\nimport AutoNumeric from 'autonumeric';\r\nimport {AutonumericDefaults} from './autonumeric-defaults.service';\r\nimport {AutonumericOptions} from './autonumeric.model';\r\n\r\nexport const AUTONUMERIC_CONTROL_VALUE_ACCESSOR: any = {\r\n  provide: NG_VALUE_ACCESSOR,\r\n  useExisting: forwardRef(() => AutonumericDirective),\r\n  multi: true\r\n};\r\n\r\n@Directive({\r\n  selector: '[autonumeric]',\r\n  providers: [AUTONUMERIC_CONTROL_VALUE_ACCESSOR],\r\n  // tslint:disable-next-line:use-host-property-decorator\r\n  host: {\r\n    '(blur)': 'onTouchedFn()'\r\n  },\r\n})\r\nexport class AutonumericDirective implements OnInit, AfterViewInit, OnChanges, OnDestroy, ControlValueAccessor {\r\n\r\n  /* Defines the strategy to apply when options change.\r\n   * reset will drop any previous options\r\n   * update will change old values one by one but keep those that are not mentioned in the new options\r\n   */\r\n  @Input()\r\n  strategy: 'reset' | 'update' = 'reset';\r\n\r\n  @Input()\r\n  options: AutonumericOptions;\r\n  @Input()\r\n  predefined: string;\r\n  instance: any;\r\n  private isDisabled = false;\r\n  private initialValue: any;\r\n  unsubscribeFormat: () => void;\r\n  unsubscribeRawValueModified: () => void;\r\n  @Output()\r\n  formatted = new EventEmitter();\r\n  @Output()\r\n  rawValueModified = new EventEmitter();\r\n  onChangeFn: (value: any) => void = () => {\r\n  };\r\n\r\n  onTouchedFn = () => {\r\n  };\r\n\r\n  constructor(\r\n    private elm: ElementRef,\r\n    private defaults: AutonumericDefaults,\r\n    private renderer: Renderer2,\r\n  ) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n\tthis.instance = new AutoNumeric(\r\n      this.elm.nativeElement,\r\n      this.getOptions()\r\n    );\r\n  }\r\n\r\n  private normalize(options: any) {\r\n    const normalized = {};\r\n    Object.keys(AutoNumeric.options).forEach(key => {\r\n      if (typeof options[key] === 'undefined') {\r\n        normalized[key] = (this.defaults as any)[key];\r\n      } else {\r\n        normalized[key] = options[key];\r\n      }\r\n    });\r\n    return normalized;\r\n  }\r\n\r\n  ngAfterViewInit(): void {\r\n    this.setDisabledState(this.isDisabled);\r\n    this.unsubscribeFormat = this.renderer.listen(this.elm.nativeElement, 'autoNumeric:formatted', ($event) => {\r\n      this.formatted.emit($event);\r\n    });\r\n    this.unsubscribeRawValueModified = this.renderer.listen(this.elm.nativeElement, 'autoNumeric:rawValueModified', ($event) => {\r\n      this.onChangeFn($event.detail.newRawValue);\r\n      this.rawValueModified.emit($event);\r\n    });\r\n  }\r\n\r\n  private getOptions() {\r\n    if (this.options === undefined && this.predefined === undefined) {\r\n      return this.defaults;\r\n    }\r\n    if (this.options !== undefined && this.predefined !== undefined) {\r\n      throw new Error('predefined attribute could not be combined with options. Please use either predefined or options');\r\n    }\r\n    if (this.options !== undefined) {\r\n      return this.normalize(this.options);\r\n    }\r\n    const predefined = AutoNumeric.getPredefinedOptions()[this.predefined];\r\n    return this.normalize(predefined);\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    if (!this.instance) {\r\n      return;\r\n    }\r\n    if (changes.options || changes.predefined) {\r\n      if (this.strategy === 'reset') {\r\n        this.instance.options.reset();\r\n      }\r\n      this.instance.update(this.getOptions());\r\n    }\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.unsubscribeFormat();\r\n    this.unsubscribeRawValueModified();\r\n    try {\r\n      this.instance.remove(); // remove listeners\r\n    } catch (e) {\r\n    }\r\n  }\r\n\r\n  writeValue(value: any): void {\r\n    if (this.instance) {\r\n      this.instance.set(value);\r\n    } else {\r\n      // autonumeric hasn't been initialised yet, store the value for later use\r\n      this.initialValue = value;\r\n    }\r\n  }\r\n\r\n  registerOnChange(fn: any): void {\r\n    this.onChangeFn = fn;\r\n  }\r\n\r\n  registerOnTouched(fn: () => void): void {\r\n    this.onTouchedFn = fn;\r\n  }\r\n\r\n  setDisabledState(isDisabled: boolean): void {\r\n    this.isDisabled = isDisabled;\r\n    if (this.instance) {\r\n      if (this.isDisabled) {\r\n        this.renderer.setProperty(this.instance.domElement, 'disabled', 'disabled');\r\n      } else {\r\n        this.renderer.removeAttribute(this.instance.domElement, 'disabled');\r\n      }\r\n    }\r\n  }\r\n}\r\n","import {InjectionToken, ModuleWithProviders, NgModule} from '@angular/core';\r\nimport {AutonumericOptions} from \"./autonumeric.model\";\r\nimport {AutonumericDefaults} from \"./autonumeric-defaults.service\";\r\nimport {AutonumericDirective} from \"./autonumeric.directive\";\r\nimport {CommonModule} from '@angular/common';\r\n\r\nexport const USER_DEFAULTS = new InjectionToken('autonumeric defaults');\r\n\r\nexport function defaultsFactory(userDefaults: AutonumericOptions): AutonumericDefaults {\r\n    const defaults: AutonumericDefaults = new AutonumericDefaults();\r\n    Object.assign(defaults, userDefaults);\r\n    return defaults;\r\n}\r\n\r\n@NgModule({\r\n    imports: [CommonModule],\r\n    declarations: [AutonumericDirective],\r\n    exports: [AutonumericDirective]\r\n})\r\nexport class AutonumericModule {\r\n    static forRoot(userDefaults: AutonumericOptions = {}): ModuleWithProviders {\r\n        return {\r\n            ngModule: AutonumericModule,\r\n            providers: [\r\n                {\r\n                    provide: USER_DEFAULTS,\r\n                    useValue: userDefaults\r\n                },\r\n                {\r\n                    provide: AutonumericDefaults,\r\n                    useFactory: defaultsFactory,\r\n                    deps: [USER_DEFAULTS]\r\n                }\r\n            ]\r\n        };\r\n    }\r\n}\r\n"],"names":[],"mappings":"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"}
